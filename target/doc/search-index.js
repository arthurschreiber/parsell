var searchIndex = {};
searchIndex['parsell'] = {"items":[[0,"","parsell","Parsell: an LL(1) streaming parser combinator library for Rust",null,null],[3,"InState","","A parser that knows its current state.",null,null],[4,"ParseResult","","The result of parsing",null,null],[13,"Done","","The parse is finished.",0,null],[13,"Continue","","The parse can continue.",0,null],[5,"character","","An uncommitted parser that reads one character.",null,{"inputs":[{"name":"f"}],"output":{"name":"character"}}],[5,"character_ref","","An uncommitted parser that reads one character by reference.",null,{"inputs":[{"name":"f"}],"output":{"name":"characterref"}}],[5,"character_map_ref","","An uncommitted parser that reads one character by reference and applies a function to it.",null,{"inputs":[{"name":"f"}],"output":{"name":"map"}}],[5,"character_map","","An uncommitted parser that reads one character and applies a function to it.",null,{"inputs":[{"name":"f"}],"output":{"name":"map"}}],[5,"emit","","A committed parser that reads zero characters.",null,{"inputs":[{"name":"t"}],"output":{"name":"emit"}}],[0,"impls","","Provide implementations of parser traits.",null,null],[3,"Function2","parsell::impls","",null,null],[3,"Function3","","",null,null],[3,"Function4","","",null,null],[3,"Function5","","",null,null],[3,"Try","","",null,null],[3,"TryDiscard","","",null,null],[3,"TryZip","","",null,null],[3,"ZipTry","","",null,null],[3,"TryZipTry","","",null,null],[3,"TryOpt","","",null,null],[3,"MkSome","","",null,null],[3,"IsSome","","",null,null],[3,"Unwrap","","",null,null],[3,"Dereference","","",null,null],[3,"First","","",null,null],[3,"Second","","",null,null],[3,"Map","","",null,null],[3,"VariantMap","","",null,null],[3,"AndThen","","",null,null],[3,"OrElse","","",null,null],[3,"StarState","","",null,null],[3,"Plus","","",null,null],[3,"Star","","",null,null],[3,"Opt","","",null,null],[3,"Discard","","",null,null],[3,"Emit","","",null,null],[3,"Character","","",null,null],[3,"CharacterRef","","",null,null],[3,"AnyCharacter","","",null,null],[3,"Buffered","","",null,null],[3,"BufferedState","","",null,null],[3,"BoxableState","","",null,null],[3,"Boxed","","",null,null],[4,"AndThenState","","",null,null],[13,"InLhs","","",1,null],[13,"InBetween","","",1,null],[13,"InRhs","","",1,null],[4,"OrElseState","","",null,null],[13,"Lhs","","",2,null],[13,"Rhs","","",2,null],[4,"CharacterState","","",null,null],[11,"fmt","","",3,{"inputs":[{"name":"function2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"function2"}],"output":{"name":"function2"}}],[11,"new","","",3,{"inputs":[{"name":"function2"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",3,null],[11,"fmt","","",4,{"inputs":[{"name":"function3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"function3"}],"output":{"name":"function3"}}],[11,"new","","",4,{"inputs":[{"name":"function3"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",4,null],[11,"fmt","","",5,{"inputs":[{"name":"function4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"function4"}],"output":{"name":"function4"}}],[11,"new","","",5,{"inputs":[{"name":"function4"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",5,null],[11,"fmt","","",6,{"inputs":[{"name":"function5"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"function5"}],"output":{"name":"function5"}}],[11,"new","","",6,{"inputs":[{"name":"function5"},{"name":"f"}],"output":{"name":"self"}}],[11,"apply","","",6,null],[11,"fmt","","",7,{"inputs":[{"name":"try"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"try"}],"output":{"name":"try"}}],[11,"apply","","",7,{"inputs":[{"name":"try"},{"name":"result"}],"output":{"name":"result"}}],[11,"apply","","",7,{"inputs":[{"name":"try"},{"name":"result"}],"output":{"name":"result"}}],[11,"new","","",7,{"inputs":[{"name":"try"},{"name":"f"}],"output":{"name":"try"}}],[11,"fmt","","",8,{"inputs":[{"name":"trydiscard"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"trydiscard"}],"output":{"name":"trydiscard"}}],[11,"apply","","",8,{"inputs":[{"name":"trydiscard"},{"name":"result"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"tryzip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"tryzip"}],"output":{"name":"tryzip"}}],[11,"apply","","",9,null],[11,"fmt","","",10,{"inputs":[{"name":"ziptry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"ziptry"}],"output":{"name":"ziptry"}}],[11,"apply","","",10,null],[11,"fmt","","",11,{"inputs":[{"name":"tryziptry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"tryziptry"}],"output":{"name":"tryziptry"}}],[11,"apply","","",11,null],[11,"apply","","",11,null],[11,"fmt","","",12,{"inputs":[{"name":"tryopt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"tryopt"}],"output":{"name":"tryopt"}}],[11,"apply","","",12,{"inputs":[{"name":"tryopt"},{"name":"option"}],"output":{"name":"result"}}],[11,"apply","","",12,{"inputs":[{"name":"tryopt"},{"name":"option"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"mksome"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"mksome"}],"output":{"name":"mksome"}}],[11,"apply","","",13,{"inputs":[{"name":"mksome"},{"name":"t"}],"output":{"name":"option"}}],[11,"fmt","","",14,{"inputs":[{"name":"issome"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"issome"}],"output":{"name":"issome"}}],[11,"apply","","",14,{"inputs":[{"name":"issome"},{"name":"s"}],"output":{"name":"bool"}}],[11,"new","","",14,{"inputs":[{"name":"issome"},{"name":"f"}],"output":{"name":"issome"}}],[11,"fmt","","",15,{"inputs":[{"name":"unwrap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"unwrap"}],"output":{"name":"unwrap"}}],[11,"apply","","",15,{"inputs":[{"name":"unwrap"},{"name":"s"}],"output":{"name":"t"}}],[11,"new","","",15,{"inputs":[{"name":"unwrap"},{"name":"f"}],"output":{"name":"unwrap"}}],[11,"fmt","","",16,{"inputs":[{"name":"dereference"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"dereference"}],"output":{"name":"dereference"}}],[11,"apply","","",16,{"inputs":[{"name":"dereference"},{"name":"s"}],"output":{"name":"t"}}],[11,"new","","",16,{"inputs":[{"name":"dereference"},{"name":"f"}],"output":{"name":"dereference"}}],[11,"fmt","","",17,{"inputs":[{"name":"first"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"first"}],"output":{"name":"first"}}],[11,"apply","","",17,null],[11,"apply","","",17,null],[11,"fmt","","",18,{"inputs":[{"name":"second"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"second"}],"output":{"name":"second"}}],[11,"apply","","",18,null],[11,"apply","","",18,null],[11,"clone","","",19,{"inputs":[{"name":"map"}],"output":{"name":"self"}}],[11,"fmt","","",19,{"inputs":[{"name":"map"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"done","","",19,{"inputs":[{"name":"map"}],"output":{"name":"output"}}],[11,"more","","",19,{"inputs":[{"name":"map"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"empty","","",19,{"inputs":[{"name":"map"}],"output":{"name":"output"}}],[11,"init","","",19,{"inputs":[{"name":"map"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",19,{"inputs":[{"name":"map"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"clone","","",20,{"inputs":[{"name":"variantmap"}],"output":{"name":"self"}}],[11,"fmt","","",20,{"inputs":[{"name":"variantmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"done","","",20,{"inputs":[{"name":"variantmap"}],"output":{"name":"output"}}],[11,"more","","",20,{"inputs":[{"name":"variantmap"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"empty","","",20,{"inputs":[{"name":"variantmap"}],"output":{"name":"output"}}],[11,"init","","",20,{"inputs":[{"name":"variantmap"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",20,{"inputs":[{"name":"variantmap"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",21,{"inputs":[{"name":"andthen"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"andthen"}],"output":{"name":"andthen"}}],[11,"empty","","",21,null],[11,"init","","",21,{"inputs":[{"name":"andthen"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",21,{"inputs":[{"name":"andthen"},{"name":"p"},{"name":"q"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"andthenstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"andthenstate"}],"output":{"name":"andthenstate"}}],[11,"done","","",1,null],[11,"more","","",1,{"inputs":[{"name":"andthenstate"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"fmt","","",22,{"inputs":[{"name":"orelse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"orelse"}],"output":{"name":"orelse"}}],[11,"empty","","",22,{"inputs":[{"name":"orelse"}],"output":{"name":"output"}}],[11,"init","","",22,{"inputs":[{"name":"orelse"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",22,{"inputs":[{"name":"orelse"},{"name":"p"},{"name":"q"}],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"orelsestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"orelsestate"}],"output":{"name":"orelsestate"}}],[11,"more","","",2,{"inputs":[{"name":"orelsestate"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",2,{"inputs":[{"name":"orelsestate"}],"output":{"name":"output"}}],[11,"fmt","","",23,{"inputs":[{"name":"starstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"starstate"}],"output":{"name":"starstate"}}],[11,"more","","",23,{"inputs":[{"name":"starstate"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",23,{"inputs":[{"name":"starstate"}],"output":{"name":"t"}}],[11,"clone","","",24,{"inputs":[{"name":"plus"}],"output":{"name":"self"}}],[11,"fmt","","",24,{"inputs":[{"name":"plus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"init","","",24,{"inputs":[{"name":"plus"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",24,{"inputs":[{"name":"plus"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"clone","","",25,{"inputs":[{"name":"star"}],"output":{"name":"self"}}],[11,"fmt","","",25,{"inputs":[{"name":"star"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"init","","",25,{"inputs":[{"name":"star"},{"name":"str"}],"output":{"name":"option"}}],[11,"empty","","",25,{"inputs":[{"name":"star"}],"output":{"name":"output"}}],[11,"new","","",25,{"inputs":[{"name":"star"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",26,{"inputs":[{"name":"opt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"opt"}],"output":{"name":"opt"}}],[11,"more","","",26,{"inputs":[{"name":"opt"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",26,{"inputs":[{"name":"opt"}],"output":{"name":"option"}}],[11,"init","","",26,{"inputs":[{"name":"opt"},{"name":"str"}],"output":{"name":"option"}}],[11,"empty","","",26,{"inputs":[{"name":"opt"}],"output":{"name":"option"}}],[11,"new","","",26,{"inputs":[{"name":"opt"},{"name":"p"}],"output":{"name":"self"}}],[11,"fmt","","",27,{"inputs":[{"name":"discard"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"discard"}],"output":{"name":"discard"}}],[11,"more","","",27,{"inputs":[{"name":"discard"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",27,null],[11,"init","","",27,{"inputs":[{"name":"discard"},{"name":"str"}],"output":{"name":"option"}}],[11,"empty","","",27,null],[11,"new","","",27,{"inputs":[{"name":"discard"},{"name":"p"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"emit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"emit"}],"output":{"name":"emit"}}],[11,"more","","",28,{"inputs":[{"name":"emit"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",28,{"inputs":[{"name":"emit"}],"output":{"name":"output"}}],[11,"init","","",28,{"inputs":[{"name":"emit"},{"name":"str"}],"output":{"name":"option"}}],[11,"empty","","",28,{"inputs":[{"name":"emit"}],"output":{"name":"output"}}],[11,"new","","",28,{"inputs":[{"name":"emit"},{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"characterstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"characterstate"}],"output":{"name":"characterstate"}}],[11,"more","","",29,{"inputs":[{"name":"characterstate"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",29,{"inputs":[{"name":"characterstate"}],"output":{"name":"ch"}}],[11,"clone","","",30,{"inputs":[{"name":"character"}],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"character"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"init","","",30,{"inputs":[{"name":"character"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",30,{"inputs":[{"name":"character"},{"name":"f"}],"output":{"name":"self"}}],[11,"clone","","",31,{"inputs":[{"name":"characterref"}],"output":{"name":"self"}}],[11,"fmt","","",31,{"inputs":[{"name":"characterref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"init","","",31,{"inputs":[{"name":"characterref"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",31,{"inputs":[{"name":"characterref"},{"name":"f"}],"output":{"name":"self"}}],[11,"fmt","","",32,{"inputs":[{"name":"anycharacter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"anycharacter"}],"output":{"name":"anycharacter"}}],[11,"more","","",32,{"inputs":[{"name":"anycharacter"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",32,{"inputs":[{"name":"anycharacter"}],"output":{"name":"option"}}],[11,"init","","",32,{"inputs":[{"name":"anycharacter"},{"name":"str"}],"output":{"name":"option"}}],[11,"empty","","",32,{"inputs":[{"name":"anycharacter"}],"output":{"name":"option"}}],[11,"fmt","","",33,{"inputs":[{"name":"buffered"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"buffered"}],"output":{"name":"buffered"}}],[11,"init","","",33,{"inputs":[{"name":"buffered"},{"name":"chars"}],"output":{"name":"option"}}],[11,"empty","","",33,{"inputs":[{"name":"buffered"}],"output":{"name":"cow"}}],[11,"new","","",33,{"inputs":[{"name":"buffered"},{"name":"p"}],"output":{"name":"self"}}],[11,"fmt","","",34,{"inputs":[{"name":"bufferedstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"bufferedstate"}],"output":{"name":"bufferedstate"}}],[11,"more","","",34,{"inputs":[{"name":"bufferedstate"},{"name":"chars"}],"output":{"name":"parseresult"}}],[11,"done","","",34,{"inputs":[{"name":"bufferedstate"}],"output":{"name":"cow"}}],[11,"fmt","","",35,{"inputs":[{"name":"boxablestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"more_boxable","","",35,{"inputs":[{"name":"boxablestate"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done_boxable","","",35,{"inputs":[{"name":"boxablestate"}],"output":{"name":"output"}}],[11,"more","alloc::boxed","",36,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",36,{"inputs":[{"name":"box"}],"output":{"name":"output"}}],[11,"new","parsell::impls","",35,{"inputs":[{"name":"boxablestate"},{"name":"p"}],"output":{"name":"self"}}],[11,"clone","","",37,{"inputs":[{"name":"boxed"}],"output":{"name":"boxed"}}],[11,"fmt","","",37,{"inputs":[{"name":"boxed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"init","","",37,{"inputs":[{"name":"boxed"},{"name":"str"}],"output":{"name":"option"}}],[11,"empty","","",37,{"inputs":[{"name":"boxed"}],"output":{"name":"output"}}],[11,"new","","",37,{"inputs":[{"name":"boxed"},{"name":"p"},{"name":"f"}],"output":{"name":"self"}}],[17,"CHARACTER","parsell","A committed parser that reads one character.",null,null],[8,"HasOutput","","A trait for parsers which can infer their output type from their input types.",null,null],[16,"Output","","The type of the data being produced by the parser.",38,null],[8,"Stateful","","A trait for stateful parsers.",null,null],[10,"more","","Provides data to the parser.",39,{"inputs":[{"name":"stateful"},{"name":"str"}],"output":{"name":"parseresult"}}],[10,"done","","Tells the parser that it will not receive any more data.",39,{"inputs":[{"name":"stateful"}],"output":{"name":"output"}}],[11,"last","","Provides the last data to the parser.",39,{"inputs":[{"name":"stateful"},{"name":"str"}],"output":{"name":"output"}}],[8,"StatefulInfer","","A trait for stateful parsers which can infer their output type from their input types.",null,null],[8,"StatefulStr","","A trait for stateful string parsers.",null,null],[11,"more_str","","Provides a string to the parser.",40,{"inputs":[{"name":"statefulstr"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"last_str","","Provides the last string to the parser.",40,{"inputs":[{"name":"statefulstr"},{"name":"str"}],"output":{"name":"output"}}],[8,"Parser","","A trait for stateless parsers.",null,null],[11,"or_else","","Choice between parsers",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"orelse"}}],[11,"and_then","","Sequencing with a committed parser",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"andthen"}}],[11,"try_and_then","","Sequencing with a committed parser (bubble any errors from this parser).",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"map"}}],[11,"and_then_try","","Sequencing with a committed parser (bubble any errors from that parser).",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"map"}}],[11,"try_and_then_try","","Sequencing with a committed parser (bubble any errors from either parser).",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"variantmap"}}],[11,"plus","","Iterate one or more times (returns an uncommitted parser).",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"plus"}}],[11,"star","","Iterate zero or more times (returns a committed parser).",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"star"}}],[11,"map","","Apply a function to the result",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"map2","","Apply a 2-arguent function to the result",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"map3","","Apply a 3-arguent function to the result",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"map4","","Apply a 4-arguent function to the result",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"map5","","Apply a 5-arguent function to the result",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"try_map","","Apply a function to the result (bubble any errors).",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"try_map2","","Apply a 2-argument function to the result (bubble any errors).",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"try_map3","","Apply a 3-argument function to the result (bubble any errors).",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"try_map4","","Apply a 4-argument function to the result (bubble any errors).",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"try_map5","","Apply a 5-argument function to the result (bubble any errors).",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_ref","","Apply a by-reference function to the result",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"map"}}],[11,"variant_map","","Apply a variant function to the result",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"variantmap"}}],[11,"discard_and_then","","Sequencing, discard the output of the first parse",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"variantmap"}}],[11,"and_then_discard","","Sequencing, discard the output of the second parse",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"variantmap"}}],[11,"try_discard_and_then","","Sequencing, discard the output of the first parse, bubble errors from the first parser",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"variantmap"}}],[11,"and_then_try_discard","","Sequencing, discard the output of the second parse, bubble errors from the second parser",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"variantmap"}}],[11,"try_discard_and_then_try","","Sequencing, discard the output of the first parse, bubble errors from either parser",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"variantmap"}}],[11,"try_and_then_try_discard","","Sequencing, discard the output of the second parse, bubble errors from either parser",41,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"variantmap"}}],[11,"opt","","Optional parse",41,{"inputs":[{"name":"parser"}],"output":{"name":"opt"}}],[11,"try_opt","","Optional parse",41,{"inputs":[{"name":"parser"}],"output":{"name":"variantmap"}}],[11,"discard","","Discard the output",41,{"inputs":[{"name":"parser"}],"output":{"name":"discard"}}],[11,"try_discard","","Discard the output, bubbling errors",41,{"inputs":[{"name":"parser"}],"output":{"name":"map"}}],[11,"boxed","","Box up this parser",41,{"inputs":[{"name":"parser"},{"name":"f"}],"output":{"name":"boxed"}}],[11,"in_state","","Set the state of this parser",41,{"inputs":[{"name":"parser"},{"name":"state"}],"output":{"name":"instate"}}],[11,"buffer","","A parser which produces its input.",41,{"inputs":[{"name":"parser"}],"output":{"name":"buffered"}}],[8,"Committed","","A trait for committed parsers.",null,null],[10,"empty","","Parse an EOF.",42,{"inputs":[{"name":"committed"}],"output":{"name":"output"}}],[8,"CommittedInfer","","A trait for committed parsers which can infer their output type from their input types.",null,null],[8,"Uncommitted","","A trait for uncommitted parsers.",null,null],[16,"State","","",43,null],[10,"init","","Parse a string of data.",43,{"inputs":[{"name":"uncommitted"},{"name":"str"}],"output":{"name":"option"}}],[8,"UncommittedInfer","","A trait for uncommitted parsers which can infer their output type from their input types.",null,null],[8,"UncommittedStr","","A trait for uncommitted string parsers.",null,null],[11,"init_str","","Provides string data to the parser.",44,{"inputs":[{"name":"uncommittedstr"},{"name":"str"}],"output":{"name":"option"}}],[8,"Boxable","","A trait for boxable parsers.",null,null],[10,"more_boxable","","",45,{"inputs":[{"name":"boxable"},{"name":"str"}],"output":{"name":"parseresult"}}],[10,"done_boxable","","",45,{"inputs":[{"name":"boxable"}],"output":{"name":"output"}}],[8,"Function","","A trait for one-argument functions.",null,null],[16,"Output","","",46,null],[10,"apply","","",46,{"inputs":[{"name":"function"},{"name":"s"}],"output":{"name":"output"}}],[8,"VariantFunction","","A trait for functions that can compute their inputs from their outputs",null,null],[16,"Input","","",47,null],[10,"apply","","",47,{"inputs":[{"name":"variantfunction"},{"name":"input"}],"output":{"name":"t"}}],[8,"Factory","","A trait for factories.",null,null],[16,"Output","","",48,null],[10,"build","","",48,{"inputs":[{"name":"factory"}],"output":{"name":"output"}}],[8,"Consumer","","A trait for consumers of data, typically buffers.",null,null],[10,"accept","","Accepts data.",49,{"inputs":[{"name":"consumer"},{"name":"t"}],"output":null}],[8,"Upcast","","A trait for subtyping",null,null],[10,"upcast","","",50,{"inputs":[{"name":"upcast"}],"output":{"name":"t"}}],[8,"Downcast","","A trait for subtyping where conversion downwards is possible (e.g. `Cow<'a,str>` can be converted to `Cow<'static,str>`).",null,null],[10,"downcast","","",51,{"inputs":[{"name":"downcast"}],"output":{"name":"t"}}],[8,"ToStatic","","A trait for data which can be saved to and restored from long-lived state.",null,null],[16,"Static","","",52,null],[8,"StaticMarker","","A marker trait for static data.",null,null],[8,"PeekableIterator","","",null,null],[10,"is_empty","","",53,{"inputs":[{"name":"peekableiterator"}],"output":{"name":"bool"}}],[10,"next_if_ref","","",53,{"inputs":[{"name":"peekableiterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"next_if","","",53,{"inputs":[{"name":"peekableiterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"parseresult"}],"output":{"name":"parseresult"}}],[11,"fmt","","",0,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"more","","",54,{"inputs":[{"name":"instate"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"done","","",54,{"inputs":[{"name":"instate"}],"output":{"name":"output"}}],[11,"accept","collections::string","",55,{"inputs":[{"name":"string"},{"name":"string"}],"output":null}],[11,"accept","","",55,{"inputs":[{"name":"string"},{"name":"str"}],"output":null}],[11,"accept","","",55,{"inputs":[{"name":"string"},{"name":"cow"}],"output":null}],[11,"accept","","",55,{"inputs":[{"name":"string"},{"name":"char"}],"output":null}],[11,"accept","collections::borrow","",56,{"inputs":[{"name":"cow"},{"name":"string"}],"output":null}],[11,"accept","","",56,{"inputs":[{"name":"cow"},{"name":"str"}],"output":null}],[11,"accept","","",56,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":null}],[11,"accept","","",56,{"inputs":[{"name":"cow"},{"name":"char"}],"output":null}],[11,"accept","collections::vec","",57,null],[11,"accept","","",57,{"inputs":[{"name":"vec"},{"name":"t"}],"output":null}],[11,"accept","core::result","",58,{"inputs":[{"name":"result"},{"name":"result"}],"output":null}],[11,"upcast","collections::borrow","",56,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"upcast","core::option","",59,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"upcast","core::result","",58,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"downcast","collections::borrow","",56,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"downcast","core::option","",59,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"downcast","core::result","",58,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_empty","core::iter","",60,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"next_if_ref","","",60,{"inputs":[{"name":"peekable"},{"name":"f"}],"output":{"name":"option"}}],[11,"is_empty","core::str","",61,{"inputs":[{"name":"chars"}],"output":{"name":"bool"}}],[11,"next_if_ref","","",61,{"inputs":[{"name":"chars"},{"name":"f"}],"output":{"name":"option"}}],[11,"unDone","parsell","",0,{"inputs":[{"name":"parseresult"}],"output":{"name":"output"}}],[11,"unContinue","","",0,{"inputs":[{"name":"parseresult"}],"output":{"name":"state"}}]],"paths":[[4,"ParseResult"],[4,"AndThenState"],[4,"OrElseState"],[3,"Function2"],[3,"Function3"],[3,"Function4"],[3,"Function5"],[3,"Try"],[3,"TryDiscard"],[3,"TryZip"],[3,"ZipTry"],[3,"TryZipTry"],[3,"TryOpt"],[3,"MkSome"],[3,"IsSome"],[3,"Unwrap"],[3,"Dereference"],[3,"First"],[3,"Second"],[3,"Map"],[3,"VariantMap"],[3,"AndThen"],[3,"OrElse"],[3,"StarState"],[3,"Plus"],[3,"Star"],[3,"Opt"],[3,"Discard"],[3,"Emit"],[4,"CharacterState"],[3,"Character"],[3,"CharacterRef"],[3,"AnyCharacter"],[3,"Buffered"],[3,"BufferedState"],[3,"BoxableState"],[3,"Box"],[3,"Boxed"],[8,"HasOutput"],[8,"Stateful"],[8,"StatefulStr"],[8,"Parser"],[8,"Committed"],[8,"Uncommitted"],[8,"UncommittedStr"],[8,"Boxable"],[8,"Function"],[8,"VariantFunction"],[8,"Factory"],[8,"Consumer"],[8,"Upcast"],[8,"Downcast"],[8,"ToStatic"],[8,"PeekableIterator"],[3,"InState"],[3,"String"],[4,"Cow"],[3,"Vec"],[4,"Result"],[4,"Option"],[3,"Peekable"],[3,"Chars"]]};
initSearch(searchIndex);
