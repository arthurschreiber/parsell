initSidebarItems({"constant":[["CHARACTER","A committed parser that reads one character."]],"enum":[["ParseResult","The result of parsing"]],"fn":[["character","An uncommitted parser that reads one character."],["character_ref","An uncommitted parser that reads one character by reference."],["emit","A committed parser that reads zero characters."]],"mod":[["impls","Provide implementations of parser traits."]],"struct":[["InState","A parser that knows its current state."]],"trait":[["Boxable","A trait for boxable parsers."],["Committed","A trait for committed parsers."],["CommittedInfer","A trait for committed parsers which can infer their output type from their input types."],["Consumer","A trait for consumers of data, typically buffers."],["Downcast","A trait for subtyping where conversion downwards is possible (e.g. `Cow<'a,str>` can be converted to `Cow<'static,str>`)."],["Factory","A trait for factories."],["Function","A trait for one-argument functions."],["HasOutput","A trait for parsers which can infer their output type from their input types."],["Parser","A trait for stateless parsers."],["PeekableIterator",""],["Stateful","A trait for stateful parsers."],["StatefulInfer","A trait for stateful parsers which can infer their output type from their input types."],["StatefulStr","A trait for stateful string parsers."],["StaticMarker","A marker trait for static data."],["ToStatic","A trait for data which can be saved to and restored from long-lived state."],["Uncommitted","A trait for uncommitted parsers."],["UncommittedInfer","A trait for uncommitted parsers which can infer their output type from their input types."],["UncommittedStr","A trait for uncommitted string parsers."],["Upcast","A trait for subtyping"]]});